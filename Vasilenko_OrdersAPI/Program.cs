//Swagger, JSON, static collection (N-layer arch)

// Get All Orders
// Get Order By ID
// Delete Order By ID
// Create Order By ID
// Update Order By ID

//Order entity
// Id (Guid, autogenerated)
// Total (decimal)
// BuyerId (Guid)

// List ProductItems []
//  Product Name
//  Product Price
//  Quantity
//  Total Price 


using Vasilenko_OrdersAPI.Services;
var builder = WebApplication.CreateBuilder(args);

//Подключение сервисов
builder.Services.AddSingleton<IGuidServices, GuidService>();
builder.Services.AddSingleton<UidService>();
var app = builder.Build();

app.MapGet("/", async context =>
{
    IGuidServices guid = context.RequestServices.GetRequiredService<IGuidServices>();
    UidService uid = context.RequestServices.GetRequiredService<UidService>();
    await context.Response.WriteAsync($"guid: {guid.Value}, uid: {uid.GUID.Value}");
});

// Add services to the container.
// Learn more about configuring Swagger/OpenAPI at https://aka.ms/aspnetcore/swashbuckle
builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();

builder.Services.AddSingleton<IOrder, MockOrder>();
builder.Services.AddControllers();

/*  var app = builder.Build();  */

// Configure the HTTP request pipeline.
if (app.Environment.IsDevelopment())
{
    app.UseSwagger();
    app.UseSwaggerUI();
}

app.UseHttpsRedirection();

/* var builder = WebApplication.CreateBuilder(args);  */
/* builder.Services.AddSingleton<IOrder, MockOrder>();
builder.Services.AddControllers();  */
/* var app = builder.Build();   */
/*  app.UseHttpsRedirection();  */
app.MapControllers();
app.Run();
